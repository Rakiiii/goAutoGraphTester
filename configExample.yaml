#Config file example
#It is yaml file, so any spaces,colons and dashes are important
#never use tabs here
#empty strings should be marked as ""


#type of testing graphHandler perfomance
#Can hold 2 values wright now:
# "vertextest" : for testing perfomance dependency on amount of vertex
# "edgestest" : for testing perfomance dependency on amount of edges 
type_of_test: vertextest

#get state of test to stdout
#true or false
output_flag: true

#title which you want to see at the top of your graphic
graphic_title: "dependence of graph size to handilng time"

#amount of vetex wich you wanna have on first itteration can be only possitive integer
starting_amount_of_vertex: 5

#step size for ncrising amount vertex per itteration in <type_of_test:vetextest> 
 #amount of vertex on iterration with number <itterationNumber>  = starting_amount_of_vertex + vertex_differens * itterationNumber
#could be negative( if you wanna back step ) or positive int 
vertex_differens: 1

#Amount of vertex on step number <it> will be counted as <starting_amount_of_vertex> + <it>*<vertex_differens> 

#amount of edges wich you wanna have on first itteration can be only possitive integer  
starting_amount_of_edges: 8

#step size for incrising amount edges per itteration in <type_of_test:edgestest> 
#amount of edges on iterration with number <itterationNumber>  = starting_amount_of_edges + edges_differens * itterationNumber
#could be negative( if you wanna back step ) or positive int 
edges_differens: 0

#Amount of edges on step number <it> will be counted as <starting_amount_of_edges> + <it>*<edges_differrens>

#type of program stoping condition
#can be "timestop" or "itstop" or "mixed"
#"timestop" means that it wouldn't start new itteration of graphgene and grpahhandler ,if on preveous itteration time of graphhandler work
# was more then <max_time_for_itteration>
#"itstop" means fixed amount of itteration equls to <amount_of_itterations>
#"mixed" means that it will be stoped by first true condition of "timestop" and "itstop" 
type_of_stop_condition: itstop


#amount of itterations for starting pair <graphgene, graphhandler> 
#set it -1 if you use <timestop>
amount_of_itterations: 3

#amount of time of graphhandler work to do not start next itteration
#set it -1 if you use <itstop> 
max_time_for_itteration: -1

#path to file with amount of time for graphhandler work in ms 
#due to declaration, your graphhandler must generate a file with time of work
path_to_file_with_time: time


#flag for saving result of grpahhandler
#can be true or false
save_result_flag: true

#path for copy of graphhandler result
#pass empty if you want to save it to def dir
#if dir doesnt exict it will be generated
path_to_dir_for_result: ""

#path to file with result of graphhandler result
#will be coppied to <path_to_dir_for_result> dir or GraphResult dir if <path_to_dir_for_result> is empty
#pass empty if you dont want to save results of graphhandler work
path_to_file_with_result: result_graph 

#flag for saving generated graph
#could be true or false
save_generated_graph_flag: true

#path to dir for copping generated graphs
#set it empty if it should be default "GeneratedGraph"
#if dir doesnt exict it will be generated
path_to_dir_for_coping_generated_graph: ""

#path to file with graph generated by graphgene
#if it in the same directory as autoGraphTester add here name of file that generated by graph gene
#you can path this param to graphgene flags by setting <graphpath_param_position_graphgenerator> for no zero positive int value
#set ir empty if your graphhandler doesnt need it by param
graphpath: graph

#configuration of graphgenerator
#this string should be empty
graphgenerator_config:

  #path to graph generating programm
  graphgenerator_path: RandomGraphGenerator.jar

  #type of programm that you going to use for graphgene, if you use native app let it be empty , if you use some type of virtual machine type here command 
  #to start it 
  graphfenerator_type: java

  #flags for starting virtual machine that starts graphgene,if you use native app or you dont need flags, pass this empty
  #example: if you use java pass here your -Xmx,-Xms,-jar and other flags
  graphgenerator_vm_flags: '-jar'

  #flags to start your graphgene program
  #if you use more than 1 flag separete it as you do it when you start your app via terminal
  #set it empty if you dont need flags
  #this is masive if strings , so any new arg should start with new line and - before flag it self
  #if you need to insert amount of edges to flags of your grpah gene add "Aedges" to flags
  #if you need to insert amount of vertex to flags of your grpah gene add "Avertex" to flags
  #if you nedd to pass graph name equls to graphpath add "GraphPath" to flags
  graphgenerator_flags: 
  - '-fv'
  - Avertex
  - GraphPath
  - Aedges

  #programe via you want to start vm for your graph gene, depands on your platform
  #pass ir empty if your graph gene if native app
  vmstartergg: bash

  #flags which you want to pass to your vmstarterGG
  vmstartergg_flags:
    - '-c'

  ##if you want to see out put of your graphgenerator set it true,other ones set it false
  ggoutput: false

graphhandler_config:
  #type of programm that you going to use for graphhandler, if you use native app let it be empty , if you use some type of virtual machine type here command 
  #to start it 
  graphhandler_type: ""

  #flags for starting virtual machine that starts graphhandler,if you use native app or you dont need flags, pass this empty
  #example: if you use java pass here your -Xmx,-Xms,-jar and other flags
  graphhandler_vm_flags: ""

  #path to your graphhandler program
  graphhandler_path: /home/smurf/sc/rewriteAutoGraphTester/GraphBruteForce

  #flags for graphhandler program
    #this is masive if strings , so any new arg should start with new line and - before flag it self
    #if you need to insert amount of edges to flags of your grpahhandler add "Aedges" to flags
    #if you need to insert amount of vertex to flags of your grpahhandler add "Avertex" to flags
    #if you nedd to pass graph name equls to graphpath add "GraphPath" to flags
  graphhandler_flags: 
  - '-s'
  - GraphPath
  - "3"
  - "1"
  
  #programe via you want to start vm for your graph gene, depands on your platform
  #pass ir empty if your graph gene if native app
  vmstartergh: ""

  #flags which you want to pass to your vmstarterGG
  vmstartergh_flags:
    - ""

  #if you want to see out put of your graphhandler set it true,other ones set it false
  ghoutput: true

